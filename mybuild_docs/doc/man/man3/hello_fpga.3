.TH "hello_fpga" 3 "Fri Feb 23 2024" "Version -.." "OPAE C API" \" -*- nroff -*-
.ad l
.nh
.SH NAME
hello_fpga
.SH SYNOPSIS
.br
.PP
.SS "Data Structures"

.in +1c
.ti -1c
.RI "class \fBhe_cmd\fP"
.br
.ti -1c
.RI "union \fBhe_dfh\fP"
.br
.ti -1c
.RI "union \fBhe_dsm_base\fP"
.br
.ti -1c
.RI "union \fBhe_ctl\fP"
.br
.ti -1c
.RI "union \fBhe_info\fP"
.br
.ti -1c
.RI "union \fBhe_wr_num_lines\fP"
.br
.ti -1c
.RI "union \fBhe_wr_byte_enable\fP"
.br
.ti -1c
.RI "union \fBhe_wr_config\fP"
.br
.ti -1c
.RI "union \fBhe_wr_addr_table_ctrl\fP"
.br
.ti -1c
.RI "union \fBhe_wr_addr_table_data\fP"
.br
.ti -1c
.RI "union \fBhe_rd_num_lines\fP"
.br
.ti -1c
.RI "union \fBhe_rd_config\fP"
.br
.ti -1c
.RI "union \fBhe_rd_addr_table_ctrl\fP"
.br
.ti -1c
.RI "union \fBhe_rd_addr_table_data\fP"
.br
.ti -1c
.RI "union \fBhe_err_status\fP"
.br
.ti -1c
.RI "struct \fBhe_cache_dsm_status\fP"
.br
.ti -1c
.RI "class \fBhello_fpga\fP"
.br
.ti -1c
.RI "class \fBhe_cache_cmd\fP"
.br
.ti -1c
.RI "struct \fBhe_dfh\&.__unnamed3__\fP"
.br
.ti -1c
.RI "struct \fBhe_dsm_base\&.__unnamed6__\fP"
.br
.ti -1c
.RI "struct \fBhe_ctl\&.__unnamed9__\fP"
.br
.ti -1c
.RI "struct \fBhe_info\&.__unnamed12__\fP"
.br
.ti -1c
.RI "struct \fBhe_wr_num_lines\&.__unnamed15__\fP"
.br
.ti -1c
.RI "struct \fBhe_wr_byte_enable\&.__unnamed18__\fP"
.br
.ti -1c
.RI "struct \fBhe_wr_config\&.__unnamed21__\fP"
.br
.ti -1c
.RI "struct \fBhe_wr_addr_table_ctrl\&.__unnamed24__\fP"
.br
.ti -1c
.RI "struct \fBhe_wr_addr_table_data\&.__unnamed27__\fP"
.br
.ti -1c
.RI "struct \fBhe_rd_num_lines\&.__unnamed30__\fP"
.br
.ti -1c
.RI "struct \fBhe_rd_config\&.__unnamed33__\fP"
.br
.ti -1c
.RI "struct \fBhe_rd_addr_table_ctrl\&.__unnamed36__\fP"
.br
.ti -1c
.RI "struct \fBhe_rd_addr_table_data\&.__unnamed39__\fP"
.br
.ti -1c
.RI "struct \fBhe_err_status\&.__unnamed42__\fP"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "using \fBtest_afu\fP = \fBopae::afu_test::afu\fP"
.br
.ti -1c
.RI "using \fBtest_command\fP = \fBopae::afu_test::command\fP"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum { \fBHE_DFH\fP = 0x0000, \fBHE_ID_L\fP = 0x0008, \fBHE_ID_H\fP = 0x0010, \fBHE_DFH_RSVD0\fP = 0x0018, \fBHE_DFH_RSVD1\fP = 0x0020, \fBHE_SCRATCHPAD0\fP = 0x028, \fBHE_DSM_BASE\fP = 0x030, \fBHE_CTL\fP = 0x038, \fBHE_INFO\fP = 0x040, \fBHE_WR_NUM_LINES\fP = 0x048, \fBHE_WR_BYTE_ENABLE\fP = 0x050, \fBHE_WR_CONFIG\fP = 0x058, \fBHE_WR_ADDR_TABLE_CTRL\fP = 0x060, \fBHE_WR_ADDR_TABLE_DATA\fP = 0x068, \fBHE_RD_NUM_LINES\fP = 0x070, \fBHE_RD_CONFIG\fP = 0x078, \fBHE_RD_ADDR_TABLE_CTRL\fP = 0x080, \fBHE_RD_ADDR_TABLE_DATA\fP = 0x088, \fBHE_ERROR_STATUS\fP = 0x090, \fBHE_ERROR_EXP_DATA\fP = 0x098, \fBHE_ERROR_ACT_DATA0\fP = 0x0A0, \fBHE_ERROR_ACT_DATA1\fP = 0x0A8, \fBHE_ERROR_ACT_DATA2\fP = 0x0B0, \fBHE_ERROR_ACT_DATA3\fP = 0x0B8, \fBHE_ERROR_ACT_DATA4\fP = 0x0C0, \fBHE_ERROR_ACT_DATA5\fP = 0x0C8, \fBHE_ERROR_ACT_DATA6\fP = 0x0D0, \fBHE_ERROR_ACT_DATA7\fP = 0x0D8 }"
.br
.ti -1c
.RI "enum \fBhe_rd_opcode\fP { \fBRD_LINE_I\fP = 0x0, \fBRD_LINE_S\fP = 0x1, \fBRD_LINE_EM\fP = 0x2 }"
.br
.ti -1c
.RI "enum \fBhe_wr_opcode\fP { \fBWR_LINE_I\fP = 0x0, \fBWR_LINE_M\fP = 0x1, \fBWR_PUSH_I\fP = 0x2, \fBWR_BARRIER_FRNCE\fP = 0x3, \fBWR_FLUSH_CL\fP = 0x4, \fBWR_FLUSH_CL_HCOH\fP = 0x5, \fBWR_FLUSH_CL_DCOH\fP = 0x6 }"
.br
.ti -1c
.RI "enum \fBhe_test_mode\fP { \fBHE_HELLO_FPGA\fP = 0x0 }"
.br
.ti -1c
.RI "enum \fBhe_target\fP { \fBHE_TARGET_HOST\fP = 0x0, \fBHE_TARGET_FPGA\fP = 0x1 }"
.br
.ti -1c
.RI "enum \fBhe_cxl_latency\fP { \fBHE_CXL_LATENCY_NONE\fP = 0x0, \fBHE_CXL_RD_LATENCY\fP = 0x1, \fBHE_CXL_WR_LATENCY\fP = 0x2, \fBHE_CXL_RD_WR_LATENCY\fP = 0x3 }"
.br
.ti -1c
.RI "enum \fBhe_bisa_support\fP { \fBHOSTMEM_BIAS\fP = 0x0, \fBHOST_BIAS_NA\fP = 0x1, \fBFPGAMEM_HOST_BIAS\fP = 0x2, \fBFPGAMEM_DEVICE_BIAS\fP = 0x3 }"
.br
.ti -1c
.RI "enum \fBhe_cxl_dev\fP { \fBHE_CXL_DEVICE0\fP = 0x0, \fBHE_CXL_DEVICE1\fP = 0x1 }"
.br
.ti -1c
.RI "enum \fBhe_addrtable_size\fP { \fBHE_ADDRTABLE_SIZE4096\fP = 0xC, \fBHE_ADDRTABLE_SIZE2048\fP = 0xB, \fBHE_ADDRTABLE_SIZE1024\fP = 0xA, \fBHE_ADDRTABLE_SIZE512\fP = 0x9, \fBHE_ADDRTABLE_SIZE256\fP = 0x8, \fBHE_ADDRTABLE_SIZE128\fP = 0x7, \fBHE_ADDRTABLE_SIZE64\fP = 0x6, \fBHE_ADDRTABLE_SIZE32\fP = 0x5, \fBHE_ADDRTABLE_SIZE16\fP = 0x4, \fBHE_ADDRTABLE_SIZE8\fP = 0x3, \fBHE_ADDRTABLE_SIZE4\fP = 0x2, \fBHE_ADDRTABLE_SIZE2\fP = 0x1 }"
.br
.ti -1c
.RI "enum \fBhe_traffic_enable\fP { \fBHE_ENABLE_TRAFFIC_STAGE\fP = 0x0, \fBHE_SIP_SEQ_STAGE\fP = 0x1 }"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "static const uint64_t \fBHE_CACHE_TEST_TIMEOUT\fP = 30000"
.br
.ti -1c
.RI "static const uint64_t \fBHE_CACHE_TEST_SLEEP_INVL\fP = 100"
.br
.ti -1c
.RI "static const uint64_t \fBCL\fP = 64"
.br
.ti -1c
.RI "static const uint64_t \fBKB\fP = 1024"
.br
.ti -1c
.RI "static const uint64_t \fBMB\fP = \fBKB\fP * 1024"
.br
.ti -1c
.RI "static const uint64_t \fBBUFFER_SIZE_2MB\fP = 2 * \fBMB\fP"
.br
.ti -1c
.RI "static const uint64_t \fBBUFFER_SIZE_32KB\fP = 32 * \fBKB\fP"
.br
.ti -1c
.RI "static const uint64_t \fBFPGA_32KB_CACHE_LINES\fP = (32 * \fBKB\fP) / 64"
.br
.ti -1c
.RI "static const uint64_t \fBFPGA_2MB_CACHE_LINES\fP = (2 * \fBMB\fP) / 64"
.br
.ti -1c
.RI "static const uint64_t \fBFPGA_512CACHE_LINES\fP = 512"
.br
.ti -1c
.RI "static const uint64_t \fBHELLO_FPGA_NUMCACHE_LINES\fP = 5"
.br
.ti -1c
.RI "const std::map< std::string, uint32_t > \fBhe_test_modes\fP"
.br
.ti -1c
.RI "const std::map< std::string, uint32_t > \fBhe_targets\fP"
.br
.ti -1c
.RI "const std::map< std::string, uint32_t > \fBhe_bias\fP"
.br
.ti -1c
.RI "const std::map< std::string, uint32_t > \fBhe_cxl_device\fP"
.br
.ti -1c
.RI "const std::map< std::string, uint32_t > \fBtraffic_enable\fP"
.br
.ti -1c
.RI "std::map< uint32_t, uint32_t > \fBaddrtable_size\fP"
.br
.in -1c
.SH "Data Structure Documentation"
.PP 
.SH "struct hello_fpga::he_cache_dsm_status"
.PP 
Definition at line 267 of file cxl_hello_fpga\&.h\&.
.PP
\fBData Fields:\fP
.RS 4
uint32_t \fItest_completed: 1\fP 
.br
.PP
uint32_t \fIdsm_number: 15\fP 
.br
.PP
uint32_t \fIres1: 16\fP 
.br
.PP
uint32_t \fIerr_vector: 32\fP 
.br
.PP
uint64_t \fInum_ticks: 64\fP 
.br
.PP
uint32_t \fInum_reads: 32\fP 
.br
.PP
uint32_t \fInum_writes: 32\fP 
.br
.PP
uint32_t \fIpenalty_start: 32\fP 
.br
.PP
uint32_t \fIpenalty_end: 32\fP 
.br
.PP
uint32_t \fIactual_data: 32\fP 
.br
.PP
uint32_t \fIexpected_data: 32\fP 
.br
.PP
uint32_t \fIres5[2]\fP 
.br
.PP
.RE
.PP
.SH "struct hello_fpga::he_dfh\&.__unnamed3__"
.PP 
Definition at line 104 of file cxl_hello_fpga\&.h\&.
.PP
\fBData Fields:\fP
.RS 4
uint64_t \fICcipVersionNumber: 12\fP 
.br
.PP
uint64_t \fIAfuMajVersion: 4\fP 
.br
.PP
uint64_t \fINextDfhOffset: 24\fP 
.br
.PP
uint64_t \fIEOL: 1\fP 
.br
.PP
uint64_t \fIReserved: 19\fP 
.br
.PP
uint64_t \fIFeatureType: 4\fP 
.br
.PP
.RE
.PP
.SH "struct hello_fpga::he_dsm_base\&.__unnamed6__"
.PP 
Definition at line 118 of file cxl_hello_fpga\&.h\&.
.PP
\fBData Fields:\fP
.RS 4
uint64_t \fIDsmBase: 64\fP 
.br
.PP
.RE
.PP
.SH "struct hello_fpga::he_ctl\&.__unnamed9__"
.PP 
Definition at line 127 of file cxl_hello_fpga\&.h\&.
.PP
\fBData Fields:\fP
.RS 4
uint64_t \fIResetL: 1\fP 
.br
.PP
uint64_t \fIStart: 1\fP 
.br
.PP
uint64_t \fIForcedTestCmpl: 1\fP 
.br
.PP
uint64_t \fIbias_support: 2\fP 
.br
.PP
uint64_t \fIReserved: 59\fP 
.br
.PP
.RE
.PP
.SH "struct hello_fpga::he_info\&.__unnamed12__"
.PP 
Definition at line 140 of file cxl_hello_fpga\&.h\&.
.PP
\fBData Fields:\fP
.RS 4
uint64_t \fIwrite_addr_table_size: 4\fP 
.br
.PP
uint64_t \fIread_addr_table_size: 4\fP 
.br
.PP
uint64_t \fIReserved: 56\fP 
.br
.PP
.RE
.PP
.SH "struct hello_fpga::he_wr_num_lines\&.__unnamed15__"
.PP 
Definition at line 151 of file cxl_hello_fpga\&.h\&.
.PP
\fBData Fields:\fP
.RS 4
uint64_t \fIwrite_num_lines: 16\fP 
.br
.PP
uint64_t \fIreserved: 48\fP 
.br
.PP
.RE
.PP
.SH "struct hello_fpga::he_wr_byte_enable\&.__unnamed18__"
.PP 
Definition at line 161 of file cxl_hello_fpga\&.h\&.
.PP
\fBData Fields:\fP
.RS 4
uint64_t \fIwrite_byte_enable: 64\fP 
.br
.PP
.RE
.PP
.SH "struct hello_fpga::he_wr_config\&.__unnamed21__"
.PP 
Definition at line 170 of file cxl_hello_fpga\&.h\&.
.PP
\fBData Fields:\fP
.RS 4
uint64_t \fIwrite_traffic_enable: 1\fP 
.br
.PP
uint64_t \fIcontinuous_mode_enable: 1\fP 
.br
.PP
uint64_t \fIwaitfor_completion: 1\fP 
.br
.PP
uint64_t \fIpreread_sync_enable: 1\fP 
.br
.PP
uint64_t \fIpostread_sync_enable: 1\fP 
.br
.PP
uint64_t \fIdata_pattern: 2\fP 
.br
.PP
uint64_t \fIcl_evict_enable: 1\fP 
.br
.PP
uint64_t \fIopcode: 4\fP 
.br
.PP
uint64_t \fIline_repeat_count: 8\fP 
.br
.PP
uint64_t \fIreserved: 44\fP 
.br
.PP
.RE
.PP
.SH "struct hello_fpga::he_wr_addr_table_ctrl\&.__unnamed24__"
.PP 
Definition at line 188 of file cxl_hello_fpga\&.h\&.
.PP
\fBData Fields:\fP
.RS 4
uint64_t \fIenable_address_table: 1\fP 
.br
.PP
uint64_t \fIenable_address_stride: 1\fP 
.br
.PP
uint64_t \fIstride: 2\fP 
.br
.PP
uint64_t \fIreserved: 60\fP 
.br
.PP
.RE
.PP
.SH "struct hello_fpga::he_wr_addr_table_data\&.__unnamed27__"
.PP 
Definition at line 200 of file cxl_hello_fpga\&.h\&.
.PP
\fBData Fields:\fP
.RS 4
uint64_t \fIaddress_table_value: 64\fP 
.br
.PP
.RE
.PP
.SH "struct hello_fpga::he_rd_num_lines\&.__unnamed30__"
.PP 
Definition at line 209 of file cxl_hello_fpga\&.h\&.
.PP
\fBData Fields:\fP
.RS 4
uint64_t \fIread_num_lines: 16\fP 
.br
.PP
uint64_t \fIreserved: 48\fP 
.br
.PP
.RE
.PP
.SH "struct hello_fpga::he_rd_config\&.__unnamed33__"
.PP 
Definition at line 219 of file cxl_hello_fpga\&.h\&.
.PP
\fBData Fields:\fP
.RS 4
uint64_t \fIread_traffic_enable: 1\fP 
.br
.PP
uint64_t \fIcontinuous_mode_Enable: 1\fP 
.br
.PP
uint64_t \fIwaitfor_completion: 1\fP 
.br
.PP
uint64_t \fIprewrite_sync_enable: 1\fP 
.br
.PP
uint64_t \fIpostwrite_sync_enable: 1\fP 
.br
.PP
uint64_t \fIdata_pattern: 2\fP 
.br
.PP
uint64_t \fIcl_evict_enable: 1\fP 
.br
.PP
uint64_t \fIopcode: 4\fP 
.br
.PP
uint64_t \fIline_repeat_count: 8\fP 
.br
.PP
uint64_t \fIreserved: 44\fP 
.br
.PP
.RE
.PP
.SH "struct hello_fpga::he_rd_addr_table_ctrl\&.__unnamed36__"
.PP 
Definition at line 237 of file cxl_hello_fpga\&.h\&.
.PP
\fBData Fields:\fP
.RS 4
uint64_t \fIenable_address_table: 1\fP 
.br
.PP
uint64_t \fIenable_address_stride: 1\fP 
.br
.PP
uint64_t \fIstride: 2\fP 
.br
.PP
uint64_t \fIreserved: 60\fP 
.br
.PP
.RE
.PP
.SH "struct hello_fpga::he_rd_addr_table_data\&.__unnamed39__"
.PP 
Definition at line 249 of file cxl_hello_fpga\&.h\&.
.PP
\fBData Fields:\fP
.RS 4
uint64_t \fIaddress_table_value: 64\fP 
.br
.PP
.RE
.PP
.SH "struct hello_fpga::he_err_status\&.__unnamed42__"
.PP 
Definition at line 258 of file cxl_hello_fpga\&.h\&.
.PP
\fBData Fields:\fP
.RS 4
uint64_t \fIdata_error: 1\fP 
.br
.PP
uint64_t \fIrsvd1: 15\fP 
.br
.PP
uint64_t \fIerr_index: 16\fP 
.br
.PP
uint64_t \fIrsvd2: 32\fP 
.br
.PP
.RE
.PP
.SH "Typedef Documentation"
.PP 
.SS "using \fBhello_fpga::test_afu\fP = typedef \fBopae::afu_test::afu\fP"

.PP
Definition at line 374 of file cxl_hello_fpga\&.h\&.
.SS "using \fBhello_fpga::test_command\fP = typedef \fBopae::afu_test::command\fP"

.PP
Definition at line 375 of file cxl_hello_fpga\&.h\&.
.SH "Enumeration Type Documentation"
.PP 
.SS "anonymous enum"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIHE_DFH \fP\fP
.TP
\fB\fIHE_ID_L \fP\fP
.TP
\fB\fIHE_ID_H \fP\fP
.TP
\fB\fIHE_DFH_RSVD0 \fP\fP
.TP
\fB\fIHE_DFH_RSVD1 \fP\fP
.TP
\fB\fIHE_SCRATCHPAD0 \fP\fP
.TP
\fB\fIHE_DSM_BASE \fP\fP
.TP
\fB\fIHE_CTL \fP\fP
.TP
\fB\fIHE_INFO \fP\fP
.TP
\fB\fIHE_WR_NUM_LINES \fP\fP
.TP
\fB\fIHE_WR_BYTE_ENABLE \fP\fP
.TP
\fB\fIHE_WR_CONFIG \fP\fP
.TP
\fB\fIHE_WR_ADDR_TABLE_CTRL \fP\fP
.TP
\fB\fIHE_WR_ADDR_TABLE_DATA \fP\fP
.TP
\fB\fIHE_RD_NUM_LINES \fP\fP
.TP
\fB\fIHE_RD_CONFIG \fP\fP
.TP
\fB\fIHE_RD_ADDR_TABLE_CTRL \fP\fP
.TP
\fB\fIHE_RD_ADDR_TABLE_DATA \fP\fP
.TP
\fB\fIHE_ERROR_STATUS \fP\fP
.TP
\fB\fIHE_ERROR_EXP_DATA \fP\fP
.TP
\fB\fIHE_ERROR_ACT_DATA0 \fP\fP
.TP
\fB\fIHE_ERROR_ACT_DATA1 \fP\fP
.TP
\fB\fIHE_ERROR_ACT_DATA2 \fP\fP
.TP
\fB\fIHE_ERROR_ACT_DATA3 \fP\fP
.TP
\fB\fIHE_ERROR_ACT_DATA4 \fP\fP
.TP
\fB\fIHE_ERROR_ACT_DATA5 \fP\fP
.TP
\fB\fIHE_ERROR_ACT_DATA6 \fP\fP
.TP
\fB\fIHE_ERROR_ACT_DATA7 \fP\fP
.PP
Definition at line 51 of file cxl_hello_fpga\&.h\&.
.SS "enum \fBhello_fpga::he_rd_opcode\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIRD_LINE_I \fP\fP
.TP
\fB\fIRD_LINE_S \fP\fP
.TP
\fB\fIRD_LINE_EM \fP\fP
.PP
Definition at line 83 of file cxl_hello_fpga\&.h\&.
.SS "enum \fBhello_fpga::he_wr_opcode\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIWR_LINE_I \fP\fP
.TP
\fB\fIWR_LINE_M \fP\fP
.TP
\fB\fIWR_PUSH_I \fP\fP
.TP
\fB\fIWR_BARRIER_FRNCE \fP\fP
.TP
\fB\fIWR_FLUSH_CL \fP\fP
.TP
\fB\fIWR_FLUSH_CL_HCOH \fP\fP
.TP
\fB\fIWR_FLUSH_CL_DCOH \fP\fP
.PP
Definition at line 90 of file cxl_hello_fpga\&.h\&.
.SS "enum \fBhello_fpga::he_test_mode\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIHE_HELLO_FPGA \fP\fP
.PP
Definition at line 283 of file cxl_hello_fpga\&.h\&.
.SS "enum \fBhello_fpga::he_target\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIHE_TARGET_HOST \fP\fP
.TP
\fB\fIHE_TARGET_FPGA \fP\fP
.PP
Definition at line 290 of file cxl_hello_fpga\&.h\&.
.SS "enum \fBhello_fpga::he_cxl_latency\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIHE_CXL_LATENCY_NONE \fP\fP
.TP
\fB\fIHE_CXL_RD_LATENCY \fP\fP
.TP
\fB\fIHE_CXL_WR_LATENCY \fP\fP
.TP
\fB\fIHE_CXL_RD_WR_LATENCY \fP\fP
.PP
Definition at line 296 of file cxl_hello_fpga\&.h\&.
.SS "enum \fBhello_fpga::he_bisa_support\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIHOSTMEM_BIAS \fP\fP
.TP
\fB\fIHOST_BIAS_NA \fP\fP
.TP
\fB\fIFPGAMEM_HOST_BIAS \fP\fP
.TP
\fB\fIFPGAMEM_DEVICE_BIAS \fP\fP
.PP
Definition at line 308 of file cxl_hello_fpga\&.h\&.
.SS "enum \fBhello_fpga::he_cxl_dev\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIHE_CXL_DEVICE0 \fP\fP
.TP
\fB\fIHE_CXL_DEVICE1 \fP\fP
.PP
Definition at line 327 of file cxl_hello_fpga\&.h\&.
.SS "enum \fBhello_fpga::he_addrtable_size\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIHE_ADDRTABLE_SIZE4096 \fP\fP
.TP
\fB\fIHE_ADDRTABLE_SIZE2048 \fP\fP
.TP
\fB\fIHE_ADDRTABLE_SIZE1024 \fP\fP
.TP
\fB\fIHE_ADDRTABLE_SIZE512 \fP\fP
.TP
\fB\fIHE_ADDRTABLE_SIZE256 \fP\fP
.TP
\fB\fIHE_ADDRTABLE_SIZE128 \fP\fP
.TP
\fB\fIHE_ADDRTABLE_SIZE64 \fP\fP
.TP
\fB\fIHE_ADDRTABLE_SIZE32 \fP\fP
.TP
\fB\fIHE_ADDRTABLE_SIZE16 \fP\fP
.TP
\fB\fIHE_ADDRTABLE_SIZE8 \fP\fP
.TP
\fB\fIHE_ADDRTABLE_SIZE4 \fP\fP
.TP
\fB\fIHE_ADDRTABLE_SIZE2 \fP\fP
.PP
Definition at line 338 of file cxl_hello_fpga\&.h\&.
.SS "enum \fBhello_fpga::he_traffic_enable\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIHE_ENABLE_TRAFFIC_STAGE \fP\fP
.TP
\fB\fIHE_SIP_SEQ_STAGE \fP\fP
.PP
Definition at line 354 of file cxl_hello_fpga\&.h\&.
.SH "Variable Documentation"
.PP 
.SS "const uint64_t hello_fpga::HE_CACHE_TEST_TIMEOUT = 30000\fC [static]\fP"

.PP
Definition at line 38 of file cxl_hello_fpga\&.h\&.
.PP
Referenced by hello_fpga::he_cmd::he_wait_test_completion()\&.
.SS "const uint64_t hello_fpga::HE_CACHE_TEST_SLEEP_INVL = 100\fC [static]\fP"

.PP
Definition at line 39 of file cxl_hello_fpga\&.h\&.
.PP
Referenced by hello_fpga::he_cmd::he_wait_test_completion()\&.
.SS "const uint64_t hello_fpga::CL = 64\fC [static]\fP"

.PP
Definition at line 40 of file cxl_hello_fpga\&.h\&.
.PP
Referenced by hello_fpga::he_cache_cmd::hello_fpga_data_intg_check()\&.
.SS "const uint64_t hello_fpga::KB = 1024\fC [static]\fP"

.PP
Definition at line 41 of file cxl_hello_fpga\&.h\&.
.SS "const uint64_t hello_fpga::MB = \fBKB\fP * 1024\fC [static]\fP"

.PP
Definition at line 42 of file cxl_hello_fpga\&.h\&.
.SS "const uint64_t hello_fpga::BUFFER_SIZE_2MB = 2 * \fBMB\fP\fC [static]\fP"

.PP
Definition at line 43 of file cxl_hello_fpga\&.h\&.
.PP
Referenced by hello_fpga::he_cache_cmd::he_run_hello_fpga_test()\&.
.SS "const uint64_t hello_fpga::BUFFER_SIZE_32KB = 32 * \fBKB\fP\fC [static]\fP"

.PP
Definition at line 44 of file cxl_hello_fpga\&.h\&.
.SS "const uint64_t hello_fpga::FPGA_32KB_CACHE_LINES = (32 * \fBKB\fP) / 64\fC [static]\fP"

.PP
Definition at line 45 of file cxl_hello_fpga\&.h\&.
.SS "const uint64_t hello_fpga::FPGA_2MB_CACHE_LINES = (2 * \fBMB\fP) / 64\fC [static]\fP"

.PP
Definition at line 46 of file cxl_hello_fpga\&.h\&.
.SS "const uint64_t hello_fpga::FPGA_512CACHE_LINES = 512\fC [static]\fP"

.PP
Definition at line 47 of file cxl_hello_fpga\&.h\&.
.SS "const uint64_t hello_fpga::HELLO_FPGA_NUMCACHE_LINES = 5\fC [static]\fP"

.PP
Definition at line 48 of file cxl_hello_fpga\&.h\&.
.PP
Referenced by hello_fpga::he_cache_cmd::he_run_hello_fpga_test(), and hello_fpga::he_cache_cmd::hello_fpga_data_intg_check()\&.
.SS "const std::map<std::string, uint32_t> hello_fpga::he_test_modes"
\fBInitial value:\fP
.PP
.nf
= {
    {"hellofpga", HE_HELLO_FPGA},
}
.fi
.PP
Definition at line 303 of file cxl_hello_fpga\&.h\&.
.PP
Referenced by hello_fpga::he_cache_cmd::add_options()\&.
.SS "const std::map<std::string, uint32_t> hello_fpga::he_targets"
\fBInitial value:\fP
.PP
.nf
= {
    {"host", HE_TARGET_HOST},
    {"fpga", HE_TARGET_FPGA},
}
.fi
.PP
Definition at line 315 of file cxl_hello_fpga\&.h\&.
.SS "const std::map<std::string, uint32_t> hello_fpga::he_bias"
\fBInitial value:\fP
.PP
.nf
= {
    {"host", HOSTMEM_BIAS},
    {"device", FPGAMEM_DEVICE_BIAS},
}
.fi
.PP
Definition at line 321 of file cxl_hello_fpga\&.h\&.
.SS "const std::map<std::string, uint32_t> hello_fpga::he_cxl_device"
\fBInitial value:\fP
.PP
.nf
= {
    {"/dev/dfl-cxl-cache\&.0", HE_CXL_DEVICE0},
    {"/dev/dfl-cxl-cache\&.1", HE_CXL_DEVICE1},
}
.fi
.PP
Definition at line 332 of file cxl_hello_fpga\&.h\&.
.SS "const std::map<std::string, uint32_t> hello_fpga::traffic_enable"
\fBInitial value:\fP
.PP
.nf
= {
    {"enable", HE_ENABLE_TRAFFIC_STAGE},
    {"skip", HE_SIP_SEQ_STAGE},
}
.fi
.PP
Definition at line 359 of file cxl_hello_fpga\&.h\&.
.SS "std::map<uint32_t, uint32_t> hello_fpga::addrtable_size"
\fBInitial value:\fP
.PP
.nf
= {
    {HE_ADDRTABLE_SIZE4096, 4096}, {HE_ADDRTABLE_SIZE2048, 2048},
    {HE_ADDRTABLE_SIZE1024, 1024}, {HE_ADDRTABLE_SIZE512, 512},
    {HE_ADDRTABLE_SIZE256, 256},   {HE_ADDRTABLE_SIZE128, 128},
    {HE_ADDRTABLE_SIZE64, 64},     {HE_ADDRTABLE_SIZE32, 32},
    {HE_ADDRTABLE_SIZE16, 16},     {HE_ADDRTABLE_SIZE8, 8},
    {HE_ADDRTABLE_SIZE4, 4},       {HE_ADDRTABLE_SIZE2, 2},

}
.fi
.PP
Definition at line 364 of file cxl_hello_fpga\&.h\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for OPAE C API from the source code\&.
